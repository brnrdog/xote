// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Xote__Effect from "./Xote__Effect.res.mjs";
import * as Xote__Signal from "./Xote__Signal.res.mjs";
import * as Xote__Computed from "./Xote__Computed.res.mjs";
import * as Xote__Component from "./Xote__Component.res.mjs";

var todos = Xote__Signal.make([]);

var nextId = {
  contents: 0
};

var inputValue = Xote__Signal.make("");

var darkMode = Xote__Signal.make(false);

var completedCount = Xote__Computed.make(function () {
      return Xote__Signal.get(todos).filter(function (todo) {
                  return todo.completed;
                }).length;
    });

var activeCount = Xote__Computed.make(function () {
      return Xote__Signal.get(todos).filter(function (todo) {
                  return !todo.completed;
                }).length;
    });

var totalCount = Xote__Computed.make(function () {
      return Xote__Signal.get(todos).length;
    });

function addTodo(text) {
  if (text.trim() !== "") {
    Xote__Signal.update(todos, (function (list) {
            return list.concat([{
                          id: nextId.contents,
                          text: text,
                          completed: false
                        }]);
          }));
    nextId.contents = nextId.contents + 1 | 0;
    return Xote__Signal.set(inputValue, "");
  }
  
}

function toggleTodo(id) {
  Xote__Signal.update(todos, (function (list) {
          return list.map(function (todo) {
                      if (todo.id === id) {
                        return {
                                id: todo.id,
                                text: todo.text,
                                completed: !todo.completed
                              };
                      } else {
                        return todo;
                      }
                    });
        }));
}

function clearInput() {
  var input = document.querySelector(".todo-input");
  if (!(input == null)) {
    input.value = "";
    return ;
  }
  
}

function handleInput(evt) {
  var newValue = evt.target.value;
  Xote__Signal.set(inputValue, newValue);
}

function getInputValue() {
  var input = document.querySelector(".todo-input");
  if (input == null) {
    return "";
  } else {
    return input.value;
  }
}

function handleKeyDown(evt) {
  if (evt.key === "Enter") {
    addTodo(getInputValue());
    return clearInput();
  }
  
}

function handleAddClick(_evt) {
  addTodo(getInputValue());
  clearInput();
}

function toggleTheme(_evt) {
  Xote__Signal.update(darkMode, (function (mode) {
          return !mode;
        }));
}

Xote__Effect.run(function () {
      var isDark = Xote__Signal.get(darkMode);
      if (isDark) {
        return (document.documentElement.classList.add('dark'));
      } else {
        return (document.documentElement.classList.remove('dark'));
      }
    });

function todoItem(todo) {
  var checkboxAttrs = todo.completed ? [
      [
        "type",
        "checkbox"
      ],
      [
        "checked",
        "checked"
      ],
      [
        "class",
        "w-5 h-5 cursor-pointer"
      ]
    ] : [
      [
        "type",
        "checkbox"
      ],
      [
        "class",
        "w-5 h-5 cursor-pointer"
      ]
    ];
  return Xote__Component.li([[
                "class",
                "flex items-center gap-3 p-3 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 mb-2 " + (
                  todo.completed ? "completed" : ""
                )
              ]], undefined, [
              Xote__Component.input(checkboxAttrs, [[
                      "change",
                      (function (param) {
                          toggleTodo(todo.id);
                        })
                    ]], undefined),
              Xote__Component.span([[
                      "class",
                      "flex-1 text-gray-900 dark:text-gray-100"
                    ]], undefined, [Xote__Component.text(todo.text)], undefined)
            ], undefined);
}

var inputElement = Xote__Component.input([
      [
        "type",
        "text"
      ],
      [
        "placeholder",
        "What needs to be done?"
      ],
      [
        "class",
        "todo-input flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
      ]
    ], [
      [
        "input",
        handleInput
      ],
      [
        "keydown",
        handleKeyDown
      ]
    ], undefined);

var app = Xote__Component.div([[
        "class",
        "max-w-2xl mx-auto p-6 space-y-6"
      ]], undefined, [Xote__Component.div([[
              "class",
              "bg-white dark:bg-gray-800 rounded-xl shadow-lg p-8"
            ]], undefined, [
            Xote__Component.div([[
                    "class",
                    "flex items-center justify-between mb-6"
                  ]], undefined, [
                  Xote__Component.h1([[
                          "class",
                          "text-3xl font-bold text-gray-900 dark:text-white"
                        ]], undefined, [Xote__Component.text("Todo List")], undefined),
                  Xote__Component.button([[
                          "class",
                          "px-4 py-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors"
                        ]], [[
                          "click",
                          toggleTheme
                        ]], [Xote__Component.textSignal(Xote__Computed.make(function () {
                                  if (Xote__Signal.get(darkMode)) {
                                    return "‚òÄÔ∏è Light";
                                  } else {
                                    return "üåô Dark";
                                  }
                                }))], undefined)
                ], undefined),
            Xote__Component.div([[
                    "class",
                    "grid grid-cols-3 gap-4 mb-6 p-4 bg-gray-50 dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700"
                  ]], undefined, [
                  Xote__Component.div([[
                          "class",
                          "flex flex-col items-center"
                        ]], undefined, [
                        Xote__Component.span([[
                                "class",
                                "text-xs text-gray-600 dark:text-gray-400 uppercase tracking-wide mb-1"
                              ]], undefined, [Xote__Component.text("Total")], undefined),
                        Xote__Component.span([[
                                "class",
                                "text-2xl font-bold text-gray-900 dark:text-white"
                              ]], undefined, [Xote__Component.textSignal(Xote__Computed.make(function () {
                                        return Xote__Signal.get(totalCount).toString();
                                      }))], undefined)
                      ], undefined),
                  Xote__Component.div([[
                          "class",
                          "flex flex-col items-center"
                        ]], undefined, [
                        Xote__Component.span([[
                                "class",
                                "text-xs text-gray-600 dark:text-gray-400 uppercase tracking-wide mb-1"
                              ]], undefined, [Xote__Component.text("Active")], undefined),
                        Xote__Component.span([[
                                "class",
                                "text-2xl font-bold text-blue-600 dark:text-blue-400"
                              ]], undefined, [Xote__Component.textSignal(Xote__Computed.make(function () {
                                        return Xote__Signal.get(activeCount).toString();
                                      }))], undefined)
                      ], undefined),
                  Xote__Component.div([[
                          "class",
                          "flex flex-col items-center"
                        ]], undefined, [
                        Xote__Component.span([[
                                "class",
                                "text-xs text-gray-600 dark:text-gray-400 uppercase tracking-wide mb-1"
                              ]], undefined, [Xote__Component.text("Completed")], undefined),
                        Xote__Component.span([[
                                "class",
                                "text-2xl font-bold text-green-600 dark:text-green-400"
                              ]], undefined, [Xote__Component.textSignal(Xote__Computed.make(function () {
                                        return Xote__Signal.get(completedCount).toString();
                                      }))], undefined)
                      ], undefined)
                ], undefined),
            Xote__Component.div([[
                    "class",
                    "flex gap-2 mb-6"
                  ]], undefined, [
                  inputElement,
                  Xote__Component.button([[
                          "class",
                          "px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500"
                        ]], [[
                          "click",
                          handleAddClick
                        ]], [Xote__Component.text("Add")], undefined)
                ], undefined),
            Xote__Component.ul([[
                    "class",
                    "todo-list space-y-2"
                  ]], undefined, [Xote__Component.list(todos, todoItem)], undefined)
          ], undefined)], undefined);

Xote__Component.mountById(app, "app");

export {
  todos ,
  nextId ,
  inputValue ,
  darkMode ,
  completedCount ,
  activeCount ,
  totalCount ,
  addTodo ,
  toggleTodo ,
  clearInput ,
  handleInput ,
  getInputValue ,
  handleKeyDown ,
  handleAddClick ,
  toggleTheme ,
  todoItem ,
  inputElement ,
  app ,
}
/* todos Not a pure module */
